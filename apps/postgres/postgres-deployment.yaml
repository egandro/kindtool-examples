########### WARNING ########
#- https://adamtheautomator.com/postgres-to-kubernetes/#Deploying_PostgreSQL_to_Kubernetes_Manually
#
# Doing this as Deployment with replicas is sort of an anti pattern - no idea whit the example
# from this site does this :(
#
#    - It is sort of bad idea. It spawns a deployment with 3 replicas. Which is not HA!
#    - Either we have 3 instances messing on the same /mnt/data dir
#    - or it's unclear what pod on what node has what datadir
#    - or it is unclear how to access which postgres instance if this is ment as standalone instance

apiVersion: apps/v1
kind: Deployment # Create a deployment
metadata:
  name: postgres # Set the name of the deployment
spec:
  #replicas: 3 # Set 3 deployment replicas
  # i have no idea if >1 replica can have a shared datadir
  # https://medium.com/@xcoulon/storing-data-into-persistent-volumes-on-kubernetes-fb155da16666
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15.0 # Docker image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432 # Exposing the container port 5432 for PostgreSQL client connections.
          envFrom:
            - configMapRef:
                name: postgres-config
            - secretRef:
                name: postgres-secrets # https://humanitec.com/blog/handling-environment-variables-with-kubernetes
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
